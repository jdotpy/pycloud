## Every good library should have a goal API. 
## This file is just to document the ideal usage.

######################
### CLI Tools

## minicloud.py: Give the power of the pycloud core to simle filesystem setup
minicloud.py initcloud ~/clouds/my-new-cloud
minicloud.py control <hostname or ip> -n myNewName -e environment_name -t tag1,tag2
minicloud.py exec "tag=tag2" "echo foobar"

## cloudctrl.py: Control a pycloud web installation command line
pycloudctrl register my_new_node

######################
### Python Interface 
from pycloud import PyCloud import Cloud, SSHKey, BashTask

cloud = Cloud({
	'hosts': {'name': 'myHostName'}
})

class MyLoadTask(BashTask):
    cmd = 'uptime'
    description = 'Determine load average over last 15minutes'

    def parse(self, output):
        return {
		'load': output.split()[-1]
	}

hosts = cloud.search('tag=ubuntu')
hosts.run_task(MyTask, hosts=[])
# Should give:
# [Dev] hostName1	2.5
# [Live] hostName2	2.5
